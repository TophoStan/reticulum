
version: '1'
services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: ret_dev
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    restart: always
    user: postgres
    networks:
      - localhubs
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  hubs:
    image: stantop/local-hubs:latest
    environment:
      RETICULUM_SERVER: localhost:4000
      HOST_IP: localhost
      INTERNAL_HOSTNAME: hubs
    ports:
      - "8080:8080"
    depends_on:
      - app
    networks:
      - localhubs
    command: "npm run local"

    volumes:
      - .:/app/storage/dev

  dialog:
    image: stantop/local-dialog
    ports:
      - "4443:4443"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - localhubs
    command: "node index.js"
    volumes:
      - .:/dialog/storage/dev
  spoke: 
    image: stantop/local-spoke
    environment:
      CORS_PROXY_SERVER: "localhost:4000"
      INTERNAL_HOSTNAME: spoke
    ports:
      - "9090:9090"
    networks:
      - localhubs
    command: "yarn run-local-reticulum"
    volumes:
      - .:/app/storage/dev
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      HUBS_ADMIN_INTERNAL_HOSTNAME: admin
      HUBS_CLIENT_INTERNAL_HOSTNAME: hubs
      POSTGREST_INTERNAL_HOSTNAME: postgrest
      SPOKE_INTERNAL_HOSTNAME: spoke
    networks:
      - localhubs
    command: "mix phx.server"
    volumes:
      - .:/app/storage/dev
  admin:
    image: stantop/local-hubs:latest
    environment:
      INTERNAL_HOSTNAME: admin
      POSTGREST_SERVER: postgrest
    ports:
      - "8989:8989"
    networks:
      - localhubs
    command: sh -c "cd admin && npm run local"
  postgrest:
    image: stantop/local-postgrest:latest
    ports:
      - "3000:3000"
    networks:
      - localhubs

networks:
  localhubs:

